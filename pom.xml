<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>eu.europeana</groupId>
        <artifactId>europeana-parent-pom</artifactId>
        <version>2.5</version>
    </parent>

    <artifactId>thumbnail-api</artifactId>
    <version>0.8.2-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>Thumbnail API</name>
    <description>Spring-Boot application for providing CHO thumbnail images</description>

    <properties>
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <object-storage.version>2.2</object-storage.version>
        <api-commons-sb3.version>0.1.0</api-commons-sb3.version>

        <spring-boot.version>3.2.4</spring-boot.version>
        <springdoc-openapi.version>2.6.0</springdoc-openapi.version>
        <commonsIO.version>2.16.1</commonsIO.version>
        <commonsLang3.version>3.18.0</commonsLang3.version>
        <jodatime.version>2.12.7</jodatime.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Import dependency management from Spring Boot (because we don't use Spring-Boot as parent pom)-->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <!-- use log4j2 instead -->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
                <!-- we exclude logback because otherwise we get a lot of debug logging from the Apache httpclient.
                alternatively if you want logging from that enable this and control the logging by adding a logback.xml file -->
                <exclusion>
                    <artifactId>logback-classic</artifactId>
                    <groupId>ch.qos.logback</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui -->
        <!-- Temporary commented about because of CVE-2024-45801 and EA-3929 -->
<!--        <dependency>-->
<!--            <groupId>org.springdoc</groupId>-->
<!--            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>-->
<!--            <version>2.5.0</version>-->
<!--        </dependency>-->

        <!-- Use commons so we always return errors in json format -->
        <dependency>
            <groupId>eu.europeana.api</groupId>
            <artifactId>commons-sb3-error</artifactId>
            <version>${api-commons-sb3.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/jakarta.xml.bind/jakarta.xml.bind-api -->
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>4.0.2</version>
        </dependency>
         <!-- Last-Modified dates -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${jodatime.version}</version>
        </dependency>
        <!-- StringUtils -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commonsLang3.version}</version>
        </dependency>
        <!-- Used for reading image data -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commonsIO.version}</version>
        </dependency>
        <!-- Getting data from S3 -->
        <dependency>
            <groupId>eu.europeana</groupId>
            <artifactId>object-storage</artifactId>
            <version>${object-storage.version}</version>
        </dependency>

        <!-- test dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>5.12.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock-jre8</artifactId>
            <version>2.35.1</version>
            <scope>test</scope>
        </dependency>
        <!-- For testing error response contents (not possible with Mockito)-->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>5.4.0</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <!-- set fixed name for easy deployment -->
        <finalName>${project.artifactId}</finalName>

        <plugins>
<!--            <plugin>-->
<!--                &lt;!&ndash; This will be active when running the verify or install goal-->
<!--                     To skip (e.g. during debugging) use 'mvn clean package')&ndash;&gt;-->
<!--                <groupId>org.owasp</groupId>-->
<!--                <artifactId>dependency-check-maven</artifactId>-->
<!--                <version>10.0.3</version>-->
<!--                <configuration>-->
<!--                    <nvdApiKeyEnvironmentVariable>NVD_APIKEY</nvdApiKeyEnvironmentVariable>-->
<!--                    &lt;!&ndash; see EA-3505 why we host the known exploited vulnerabilties file ourselves &ndash;&gt;-->
<!--                    <knownExploitedUrl>https://artifactory.eanadev.org/artifactory/ext-release-local/gov/cisa/www/known_exploited_vulnerabilities.json</knownExploitedUrl>-->
<!--                    <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>-->
<!--                    <failBuildOnCVSS>8</failBuildOnCVSS>-->
<!--                    <suppressionFiles>-->
<!--                        <suppressionFile>owasp-suppress.xml</suppressionFile>-->
<!--                    </suppressionFiles>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <goals>-->
<!--                            <goal>check</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- JUnit 5 requires Surefire version 2.22.0 or higher -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>
        </plugins>
    </build>

</project>
